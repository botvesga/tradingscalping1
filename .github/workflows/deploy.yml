name: Deploy Scalping Bot

on:
  push:
    branches: [ main ]

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Terraform Init & Apply
        working-directory: infra
        run: |
          terraform init
          terraform apply -auto-approve

  build-and-deploy:
    needs: terraform-apply
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build ingestion image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/ingestion:latest services/ingestion
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ github.repository_owner }}/ingestion:latest

      - name: Build signals image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/signals:latest services/signals
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ github.repository_owner }}/signals:latest

      - name: Build dashboard image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/dashboard:latest services/dashboard
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ github.repository_owner }}/dashboard:latest

      - name: Deploy to AWS ECS
        run: |
          echo "Desplegando servicios en ECS..."
